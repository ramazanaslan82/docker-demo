pipeline {
    agent any
    
    environment {
        registry = "ramazanaslan/docker-nodejs-demo"
        tagPrefix = "trial"
        nodeVersion = "12"
        registryCredential = '65da7bb2-ba6f-44bb-8dcc-249875b229c9'
        dockerImage = ''
    }

    stages {

        stage('Test') {

            agent {
                docker { image 'node:${nodeVersion}' }
            }

            steps {
                echo "Performing npm build inside container..."
                sh 'npm install --only=dev'
                sh 'npm test'
            }

        }

        stage('Test with DB') {

            steps {

                script {
                    def mysql = docker.image('mysql').run('-e MYSQL_ALLOW_EMPTY_PASSWORD=yes --rm ')
                    def appContainer = docker.image("node:${nodeVersion}")
                    appContainer.pull()
                    appContainer.inside("--link ${mysql.id}:mysql ") {
                      sh 'npm install --only=dev'
                      sh 'npm test'
                    }
                }
                

            }

        }

        stage('Build and Push') {
            steps {

                echo 'Building....'
                script {
                  dockerImage = docker.build registry + ":${tagPrefix}-${BUILD_NUMBER}"
                }

                echo 'Pushing....'
                script {
                  docker.withRegistry( '', registryCredential ) {
                    dockerImage.push()
                  }
                }

            }
        }

    }
    
    post {
        failure {
            mail to: '8a4b53e342b5d2@mailtrap.io',
                 subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
                 body: "Something is wrong with ${env.BUILD_URL}"
        }
    }
}
